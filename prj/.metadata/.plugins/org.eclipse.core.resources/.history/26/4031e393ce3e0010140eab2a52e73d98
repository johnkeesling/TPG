package edu.washington.ling;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@SuppressWarnings("serial")
public class TPG_ServerServlet extends HttpServlet {
	
    private static final String ENCODING = "UTF-8"; 
	private static final String URL_BASE = "http://search.twitter.com/search?q=%23";
	private static final String MY_SITE = "http://localhost:8888/";
	public String otpt = "";

	protected String loadTwitter(String teamName, String Date) {
		String result = "";
		String completeURL = URL_BASE + teamName + "+since:" + Date;
		
		try {
			HttpURLConnection conn = (HttpURLConnection) new URL(completeURL).openConnection();
			conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8");
			conn.setRequestProperty("REFERER", MY_SITE);
            conn.setDoInput(true);
            conn.setDoOutput(true);
            
            try {
            	InputStream is = conn.getInputStream();
            	String rawResult = makeResult(is);
            	result = rawResult;
            } finally {
            	conn.getInputStream().close();
            	if (conn.getErrorStream() != null)
            		conn.getErrorStream().close();
            }
        } catch (Exception e) {
		}
        return result;
	}
	
	protected String rankSentences() throws Exception {
		String result = "";
		String curPath = new File(".").getCanonicalPath();
		String test_inputPath = curPath + "/test_input.txt";
		File inputFile = new File(test_inputPath);
		Scanner sc = new Scanner(inputFile);
		while (sc.hasNextLine()) {
			String curLine = sc.nextLine();
			result = result + curLine + "\n";
		}
		return result;
	}
	
	private String makeResult(InputStream inputStream) throws Exception {
		StringBuilder outputString = new StringBuilder();
        	try{
        		String string;
                	if (inputStream != null){
                		BufferedReader reader = new BufferedReader(new
                		InputStreamReader(inputStream, ENCODING));

                        while(null != (string = reader.readLine())){
                                outputString.append(string).append('\n');
                        }
                	}
        	}	catch (Exception e) {
                System.out.println("Error reading stream.");
        	}
        return outputString.toString();
	}
	
	
	public void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws IOException {
		//isGame == 0 if there is no game on the chosen date
		int isGame = 0;
		resp.setContentType("text/plain");
		String[] GETreport = req.toString().split("\n");
		String firstLine = GETreport[0];
		String ModuleAndQuery = firstLine.split(" ")[1];
		String Query = ModuleAndQuery.split("\\?")[1];
		String teamName = Query.split(";")[0].split("=")[1];
		String Date = Query.split(";")[1].split("=")[1];
		String curPath = new File(".").getCanonicalPath();
		String scheduleName = teamName + "_schedule";
		String schedulePath = curPath + "/" + scheduleName;
		File scheduleFile = new File(schedulePath);
		Scanner sc = new Scanner(scheduleFile);
		while (sc.hasNextLine()) {
			String curLine = sc.nextLine();
			//resp.getWriter().println("'" + curLine + "' '" + Date + "'");
			if (curLine.equals(Date)) {
				resp.getWriter().println("this");
				isGame = 1;
			}
		}
		if (isGame == 0) {
			resp.getWriter().println("No game on that date, please choose again");
		} else {
			resp.getWriter().println("There is a game that day!");
		}
		resp.getWriter().println(teamName);
		resp.getWriter().println(Date);
		try {
			String tmpOutput = rankSentences();
			resp.getWriter().println(tmpOutput);
		} catch (Exception o) {
		}
		//String x = loadTwitter(teamName, Date);
		//resp.getWriter().println(x);
		
	}
}
